#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include "Pyuron.dtsi"

// 右側のキーマトリックスオフセット
&default_transform {
    col-offset = <6>;
};

// 右側のキーマトリックス設定
&kscan0 {
    col-gpios = <&xiao_d 10 GPIO_ACTIVE_HIGH>,
                <&xiao_d 9 GPIO_ACTIVE_HIGH>,
                <&xiao_d 8 GPIO_ACTIVE_HIGH>,
                <&xiao_d 7 GPIO_ACTIVE_HIGH>,
                <&gpio0 10 GPIO_ACTIVE_HIGH>;
};

// 右側のピン設定（SPI用）
&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 4)>,
                    <NRF_PSEL(SPIM_MISO, 0, 4)>;
        };
    };

    spi0_sleep: spi0_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 5)>,
                    <NRF_PSEL(SPIM_MOSI, 0, 4)>,
                    <NRF_PSEL(SPIM_MISO, 0, 4)>;
            low-power-enable;
        };
    };
};

// 右側のSPI設定（トラックボール用）
&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    cs-gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
};

// 右側のI2C設定（トラックパッド用）
&i2c0 {
    status = "okay";
};

// 右側のトラックパッド設定
&glidepoint {
    status = "okay";
};

// 右側のトラックボール設定
&trackball {
    status = "okay";
};

// 右側のトラックパッド入力をカーソル移動として処理
&glidepoint_split {
    device = <&glidepoint>;
};

// 右側のトラックパッドでカーソル移動を有効化
&glidepoint_pointer_listener {
    status = "okay";
    device = <&glidepoint>;
};

// 右側のトラックパッドでスクロールも有効化
&glidepoint_scroll_listener {
    status = "okay";
    device = <&glidepoint>;
};

// 右側のトラックボールでカーソル移動を有効化
&trackball_pointer_listener {
    status = "okay";
    device = <&trackball>;
};
